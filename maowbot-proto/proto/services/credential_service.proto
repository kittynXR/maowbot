syntax = "proto3";

package maowbot.services;

import "common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service CredentialService {
  // Authentication flows
  rpc BeginAuthFlow(BeginAuthFlowRequest) returns (BeginAuthFlowResponse);
  rpc CompleteAuthFlow(CompleteAuthFlowRequest) returns (CompleteAuthFlowResponse);
  rpc CompleteAuthFlow2FA(CompleteAuthFlow2FARequest) returns (CompleteAuthFlowResponse);
  
  // Credential management
  rpc ListCredentials(ListCredentialsRequest) returns (ListCredentialsResponse);
  rpc GetCredential(GetCredentialRequest) returns (GetCredentialResponse);
  rpc StoreCredential(StoreCredentialRequest) returns (StoreCredentialResponse);
  rpc RefreshCredential(RefreshCredentialRequest) returns (RefreshCredentialResponse);
  rpc RevokeCredential(RevokeCredentialRequest) returns (google.protobuf.Empty);
  
  // Batch operations
  rpc BatchRefreshCredentials(BatchRefreshCredentialsRequest) returns (BatchRefreshCredentialsResponse);
  rpc BatchListCredentials(BatchListCredentialsRequest) returns (BatchListCredentialsResponse);
  
  // Health monitoring
  rpc GetCredentialHealth(GetCredentialHealthRequest) returns (GetCredentialHealthResponse);
  rpc StreamCredentialUpdates(StreamCredentialUpdatesRequest) returns (stream CredentialUpdateEvent);
}

// Authentication Flow
message BeginAuthFlowRequest {
  maowbot.common.Platform platform = 1;
  bool is_bot = 2;
  string redirect_uri = 3; // Optional custom redirect
  repeated string requested_scopes = 4; // Optional additional scopes
}

message BeginAuthFlowResponse {
  string auth_url = 1;
  string state = 2;
  string code_verifier = 3; // For PKCE flows
  google.protobuf.Timestamp expires_at = 4;
  map<string, string> metadata = 5; // Platform-specific data
}

message CompleteAuthFlowRequest {
  maowbot.common.Platform platform = 1;
  string user_id = 2;
  oneof auth_data {
    string code = 3; // OAuth code
    CredentialsMap credentials = 4; // For multi-field auth (username/password)
  }
  string state = 5; // From BeginAuthFlow
  string code_verifier = 6; // For PKCE flows
}

message CredentialsMap {
  map<string, string> values = 1;
}

message CompleteAuthFlow2FARequest {
  maowbot.common.Platform platform = 1;
  string user_id = 2;
  string two_factor_code = 3;
  string session_token = 4; // From initial auth attempt
}

message CompleteAuthFlowResponse {
  maowbot.common.PlatformCredential credential = 1;
  bool requires_2fa = 2;
  string session_token = 3; // For 2FA flow
}

// List Credentials
message ListCredentialsRequest {
  repeated maowbot.common.Platform platforms = 1; // Empty for all
  bool active_only = 2;
  bool include_expired = 3;
  maowbot.common.PageRequest page = 4;
}

message ListCredentialsResponse {
  repeated CredentialInfo credentials = 1;
  maowbot.common.PageResponse page = 2;
}

message CredentialInfo {
  maowbot.common.PlatformCredential credential = 1;
  CredentialStatus status = 2;
  maowbot.common.User user = 3; // Optional, populated if requested
}

enum CredentialStatus {
  CREDENTIAL_STATUS_UNKNOWN = 0;
  CREDENTIAL_STATUS_ACTIVE = 1;
  CREDENTIAL_STATUS_EXPIRED = 2;
  CREDENTIAL_STATUS_REFRESH_NEEDED = 3;
  CREDENTIAL_STATUS_REVOKED = 4;
  CREDENTIAL_STATUS_ERROR = 5;
}

// Get Credential
message GetCredentialRequest {
  string credential_id = 1;
  bool include_user = 2;
}

message GetCredentialResponse {
  CredentialInfo credential = 1;
}

// Store Credential
message StoreCredentialRequest {
  maowbot.common.PlatformCredential credential = 1;
  bool update_if_exists = 2;
}

message StoreCredentialResponse {
  maowbot.common.PlatformCredential credential = 1;
  bool was_updated = 2;
}

// Refresh Credential
message RefreshCredentialRequest {
  oneof identifier {
    string credential_id = 1;
    PlatformUserIdentifier platform_user = 2;
  }
  bool force_refresh = 3; // Refresh even if not expired
}

message PlatformUserIdentifier {
  maowbot.common.Platform platform = 1;
  string user_id = 2;
}

message RefreshCredentialResponse {
  maowbot.common.PlatformCredential credential = 1;
  bool was_refreshed = 2;
  string error_message = 3; // If refresh failed
}

// Revoke Credential
message RevokeCredentialRequest {
  oneof identifier {
    string credential_id = 1;
    PlatformUserIdentifier platform_user = 2;
  }
  bool revoke_at_platform = 3; // Also revoke at the platform (not just locally)
}

// Batch Operations
message BatchRefreshCredentialsRequest {
  repeated string credential_ids = 1;
  bool force_refresh = 2;
  bool continue_on_error = 3;
}

message BatchRefreshCredentialsResponse {
  repeated RefreshResult results = 1;
  int32 success_count = 2;
  int32 failure_count = 3;
}

message RefreshResult {
  string credential_id = 1;
  bool success = 2;
  maowbot.common.PlatformCredential credential = 3;
  string error_message = 4;
}

message BatchListCredentialsRequest {
  repeated maowbot.common.Platform platforms = 1;
  bool group_by_platform = 2;
  bool include_users = 3;
}

message BatchListCredentialsResponse {
  map<string, PlatformCredentials> by_platform = 1; // Key is platform name
  repeated CredentialInfo all_credentials = 2;
}

message PlatformCredentials {
  maowbot.common.Platform platform = 1;
  repeated CredentialInfo credentials = 2;
  int32 active_count = 3;
  int32 expired_count = 4;
}

// Health Monitoring
message GetCredentialHealthRequest {
  repeated maowbot.common.Platform platforms = 1; // Empty for all
}

message GetCredentialHealthResponse {
  repeated PlatformHealth platform_health = 1;
  OverallHealth overall = 2;
}

message PlatformHealth {
  maowbot.common.Platform platform = 1;
  int32 total_credentials = 2;
  int32 active_credentials = 3;
  int32 expired_credentials = 4;
  int32 expiring_soon = 5; // Within 24 hours
  google.protobuf.Timestamp oldest_refresh = 6;
  google.protobuf.Timestamp newest_refresh = 7;
}

message OverallHealth {
  int32 total_platforms = 1;
  int32 healthy_platforms = 2;
  int32 total_credentials = 3;
  float health_score = 4; // 0.0 to 1.0
}

// Streaming
message StreamCredentialUpdatesRequest {
  repeated maowbot.common.Platform platforms = 1; // Empty for all
  repeated CredentialUpdateType update_types = 2; // Empty for all
}

enum CredentialUpdateType {
  CREDENTIAL_UPDATE_TYPE_UNKNOWN = 0;
  CREDENTIAL_UPDATE_TYPE_CREATED = 1;
  CREDENTIAL_UPDATE_TYPE_REFRESHED = 2;
  CREDENTIAL_UPDATE_TYPE_EXPIRED = 3;
  CREDENTIAL_UPDATE_TYPE_REVOKED = 4;
  CREDENTIAL_UPDATE_TYPE_ERROR = 5;
}

message CredentialUpdateEvent {
  CredentialUpdateType update_type = 1;
  maowbot.common.PlatformCredential credential = 2;
  string error_message = 3; // For error events
  google.protobuf.Timestamp timestamp = 4;
}